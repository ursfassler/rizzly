component
  TransScope
    slot   inp();
    signal outA();
    signal outB();
    
  implementation hfsm( A )
    var
      a : R{0,0} = 0;     // this variable is never read since A.a and B.b shadows it
      
    transition
      A to B by inp() if a = 0;   // guard is evaluated in the scope of the source state
      B to A by inp() if a = 0;
  
    state A
      var
        a : R{0,4} = 4;
        
      entry
        outA();
      end
      
      transition
        A to A by inp() if a > 0 do
          a := R{0,4}( a - 1 );
        end
    end
      
    state B
      entry
        outB();
      end
      
      var
        a : R{0,2} = 2;
        
      transition
        B to B by inp() if a > 0 do
          a := R{0,2}( a - 1 );
        end
    end

  end

